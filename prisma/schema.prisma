datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ---- Enums ------
enum AlarmState {
  normal
  initialAlarm
  escalationAlarm
}

enum MessageType {
  welcome
  initialAlarm
  escalationAlarm
  endAlarm
  serviceUnavailable
  serviceAvailable
}

// ---- Models ------
model User {
  id                     String     @id @default(uuid())
  // USER SETTINGS
  deviceId               Int        @unique // Pushsafer ID
  name                   String // stores the users first name
  language               String     @default("en") // users language: en, es or ca
  metric                 String     @default("level") // level or flowrate 
  value                  Decimal    @db.Decimal(5, 2) // the alert value
  role                   String     @default("user") // user | dev
  // ALERT STATE TRACKING
  alarmState             AlarmState @default(normal) // alarmstate (see enum), tells in which alarmState the user curently is
  lastWarnedAt           DateTime?
  consecutiveNormalCount Int?       @default(0) // how many times the user has been warned consecutively
  // TIMESTAMPS
  createdAt              DateTime   @default(now())
  updatedAt              DateTime   @updatedAt

  // RELATIONS
  notifications Notification[] // notifications sent to the user
}

model Notification {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  type      MessageType // type of the message (see enum)
  message   String // the message to be sent
  success   Boolean // whether the message was sent successfully
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
